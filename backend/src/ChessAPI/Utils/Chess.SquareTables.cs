namespace ChessAPI
{
// Chess.SquareTables.cs
public partial class Chess
{
    private static readonly int[] PieceValues = [100, 320, 330, 500, 900, 20000]; // P, N, B, R, Q, K
    private static readonly int[][] PieceSquareTables = [
        // Pawn
        [
            9000,9000,9000,9000,9000,9000,9000,9000,
             200, 200, 200, 200, 200, 200, 200, 200,
             100, 100, 100, 100, 100, 100, 100, 100,
              40,  40,  90, 100, 100,  90,  40,  40,
              20,  20,  20, 100, 150,  20,  20,  20,
               2,   4,   0,  15,   4,   0,   4,   2,
             -10, -10, -10, -20, -35, -10, -10, -10,
               0,   0,   0,   0,   0,   0,   0,   0
        ],
        // Knight
        [
            -20, -80, -60, -60, -60, -60, -80, -20,
            -80, -40,   0,   0,   0,   0, -40, -80,
            -60,   0,  20,  30,  30,  20,   0, -60, 
            -60,  10,  30,  40,  40,  30,  10, -60,
            -60,   0,  30,  40,  40,  30,   0, -60, 
            -60,  10,  20,  30,  30,  30,   1, -60,
            -80, -40,   0,  10,  10,   0,  -4, -80,
            -20, -80, -60, -60, -60, -60, -80, -20
        ],
        // Bishop
        [
            -40, -20, -20, -20, -20, -20, -20, -40,
            -20,   0,   0,   0,   0,   0,   0, -20,
            -20,   0,  10,  20,  20,  10,   0, -20,
            -20,  10,  10,  20,  20,  10,  10, -20,
            -20,   0,  20,  20,  20,  20,   0, -20,
            -20,  20,  20,  20,  20,  20,  20, -20,
            -20,  10,   0,   0,   0,   0,  10, -20,
            -40, -20, -20, -20, -20, -20, -20, -40 
        ],
        // Rook
        [
              0,  0,  0,  0,  0,  0,  0,   0,
             10, 20, 20, 20, 20, 20, 20,  10,
            -10,  0,  0,  0,  0,  0,  0, -10,
            -10,  0,  0,  0,  0,  0,  0, -10,
            -10,  0,  0,  0,  0,  0,  0, -10,
            -10,  0,  0,  0,  0,  0,  0, -10, 
            -10,  0,  0,  0,  0,  0,  0, -10,
            -30, 30, 40, 10, 10,  0,  0, -30
        ],
        // Queen
        [
            -40, -20, -20, -10, -10, -20, -20, -40,
            -20,   0,   0,   0,   0,   0,   0, -20,
            -20,   0,  10,  10,  10,  10,   0, -20,
            -10,   0,  10,  10,  10,  10,   0, -10,
              0,   0,  10,  10,  10,  10,   0, -10,
            -20,  10,  10,  10,  10,  10,   0, -20,
            -20,   0,  10,   0,   0,   0,   0, -20,
            -40, -20, -20, -10, -10, -20, -20, -40 
        ],
        // King
        [
            -60, -80, -80, -2, -20, -80, -80, -60,
            -60, -80, -80, -2, -20, -80, -80, -60,
            -60, -80, -80, -2, -20, -80, -80, -60,
            -60, -80, -80, -2, -20, -80, -80, -60,
            -40, -60, -60, -8, -80, -60, -60, -40,
            -20, -40, -40, -40,-40, -40, -40, -20,
             40,  40,   0,   0,  0,   0,  40,  40,
             40,  60,  20,   0,  0,  20,  60,  40
        ]
    ];
}
}